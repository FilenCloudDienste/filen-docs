openapi: '3.0.3'
info:
  title: Filen API
  description: |-
    The Filen API is used by Filen clients for uploading and downloading files, managing files and directories, sharing items, accessing notes and contacts, having chat conversations, managing user-specific settings, and more.

    Get general information about using the Filen API [in the documentation](https://docs.filen.io/docs/api).
    
    ### API responses
    All API responses follow the schema (TypeScript type definition):
    ```ts
    {
      status: boolean, // indicates whether the request was successful
      message: string, // additional information
      code: string, // a status code
      data: any? // optionally, response data
    }
    ```

    ### Format of timestamps
    Some endpoints (where noted) provide timestamps that are *either in milliseconds or in seconds*. To handle them correctly, a calculation like this might be helpful: A timestamp is in millseconds if `Math.abs(millisecondsNow - timestamp) < Math.abs(millisecondsNow - timestamp*1000)`, otherwise it is in seconds.

    ### Undocumented endpoints
    There are a number of endpoints whose specifics are not documented here.
    If you need them, you can infer their definitions and usage from [the TypeScript SDK's API wrappings](https://github.com/FilenCloudDienste/filen-sdk-ts/tree/main/src/api/v3).
    - user-related:
      - `/user/avatar` (upload an avatar)
      - `/user/affiliate/payout` (request an affiliate payout)
      - `/user/loginAlerts` (enable/disable login alerts)
      - `/confirmation/send` (resend a confirmation email)
      - `/user/gdpr` (get user's GDPR information)
      - `/user/delete` (delete account)
      - `/user/delete/all` (delete all files and directories)
      - `/user/didExportMasterKeys` (mark master keys as exported)
      - `/user/lock` (acquire a lock for a resource, which last 60 seconds)
      - `/user/invoice` (generate invoice)
      - `/user/pushToken` (assign a push token)
      - `/user/lastActive/desktop` (update last active timestamp for desktop)
      - subscriptions:
        - `/user/sub/create` (create a subscription checkout URL)
        - `/user/sub/cancel` (cancel a subscription)
      - password:
        - `/user/password/forgot` (send a password recovery email)
        - `/user/password/forgot/reset` (reset password using previously generated token)
        - `/user/2fa/enable` (enable two-factor authentication)
        - `/user/2fa/disable` (disable two-factor authentication)
      - account info:
        - `/user/personal/update` (update personal info)
        - `/user/settings` (get user's settings)
        - `/user/info` (get user's info)
        - `/user/settings/email/change` (change email)
        - `/user/settings/password/change` (change password)
        - `/user/account` (get account data)
        - `/user/profile` (get user profile)
        - `/user/nickname` (update nickname)
        - `/user/appearOffline` (update appear offline)
    - file versioning:
      - `/user/versioning` (enable/disable versioning)
      - `/user/delete/versions` (delete all file versions)
      - `/file/version/restore` (restore a file version)
      - `/file/versions` (get all versions of a file)
    - chat:
      - `/chat/messages` (get chat messaegs)
      - `/chat/send` (send chat message)
      - `/chat/typing` (send typing events)
      - `/chat/edit` (edit chat message)
      - `/chat/message/embed/disable` (disable message embed)
      - `/chat/delete` (delete chat message)
      - `/chat/unread` (get count of unread messages)
      - `/chat/read` (mark messages as read)
      - `/chat/mute` (mute/unmute chat)
      - `/chat/lastFocus` (get/update last focused timestamp of conversations)
      - conversations:
        - `/chat/conversations` (get conversations)
        - `/chat/conversations/unread` (get cound of unread messages)
        - `/chat/conversations/read` (mark messages as read)
        - `/chat/conversations/create` (create conversation)
        - `/chat/conversations/name/edit` (edit conversation name)
        - `/chat/conversations/participants/add` (add conversation participant)
        - `/chat/conversations/participants/remove` (remove conversation participant)
        - `/chat/conversations/online` (get online users in conversation)
        - `/chat/conversations/leave` (leave conversation)
        - `/chat/conversations/delete` (delete conversation)
    - notes:
      - `/notes` (get all notes)
      - `/notes/create` (create note)
      - `/notes/content` (get note content)
      - `/notes/content/edit` (edit note content)
      - `/notes/type/change` (change note type)
      - `/notes/title/edit` (edit note title)
      - `/notes/delete` (delete note permanently)
      - `/notes/trash` (trash note)
      - `/notes/archive` (archive note)
      - `/notes/restore` (restore note)
      - `/notes/history` (get note history)
      - `/notes/history/restore` (restore note from history)
      - participants:
        - `/notes/participants/add` (add note participant)
        - `/notes/participants/remove` (remove note participant)
        - `/notes/participants/permissions` (change participant permissions)
      - pinned/favorited/tagged:
        - `/notes/pinned` (pin/unpin note)
        - `/notes/favorited` (favorite/unfavorite note)
        - `/notes/tags` (get all tags)
        - `/notes/tags/create` (create tag)
        - `/notes/tags/rename` (rename tag)
        - `/notes/tags/delete` (delete tag)
        - `/notes/tag/favorite` (favorite tag)
        - `/notes/tag` (tag a note)
        - `/notes/untag` (untag a note)
    - contacts
      - `/contacts` (get all contacts)
      - `/contacts/delete` (delete contact)
      - requests:
        - `/contacts/requests/in` (get incoming contact requests)
        - `/contacts/requests/in/count` (get count of incoming contact requests)
        - `/contacts/requests/out` (get outgoing contact requests)
        - `/contacts/requests/out/delete` (delete outgoing contact request)
        - `/contacts/requests/send` (send contact request)
        - `/contacts/requests/accept` (accept contact request)
        - `/contacts/requests/deny` (deny contact request)
      - blocked:
        - `/contacts/blocked` (get blocked contacts)
        - `/contacts/blocked/delete` (unblock contact)
        - `/contacts/blocked/add` (block contact)
    - realtime events:
      - `/user/events` (get user events)
      - `/user/event` (get event info)
      - -> for a full description of the realtime events API, see [the SDK's implementations](https://github.com/FilenCloudDienste/filen-sdk-ts/blob/main/src/socket/index.ts)
    - `/versions` (get current client versions)
    - `/mobile/offline/files` (get offline files info)
    
    ### API hosts
    The Filen API is located at `gateway.filen.io`, but besides the host `filen.io` you can also use `filen.net`, `filen-1.net`, `filen-2.net`, `filen-3.net`, `filen-4.net`, `filen-5.net` or `filen-6.net`. This can be useful in order to work around browsers limiting the number of concurrent connections to a host. In your implementation, you can choose a host at random for every request and retry it on another host should it fail.
  version: v3
servers:
- url: https://gateway.filen.io/v3
externalDocs:
  description: Get general information about usage of the Filen API at docs.filen.io
  url: "https://docs.filen.io/docs/api"
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: API Key
      in: header
  schemas:
    response:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
        code:
          type: string
paths:
  /health: #edited
      get:
        summary: Get API health
        responses:
          "200":
            description: health
            content:
              text/plain:
                schema:
                  type: string
                  example: OK
  /auth/info: #edited
    post:
      tags: [User]
      summary: Get auth info
      description: Returns user-specific authentication info.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: the user's email
                  example: (user email)
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response"
  /login: #edited
    post:
      tags: [User]
      summary: Login
      description: Returns the API Key. See the [documentation](/docs/api/guides/authentication).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: the user's email
                  example: (user email)
                password:
                  type: string
                  description: a key derived from the user's password, see the documentation
                  example: (-> see description)
                twoFactorCode:
                  type: string
                  description: the user's two-factor authentication code, or `"XXXXXX"` if 2FA is disabled
                  example: (two-factor authentication code or 'XXXXXX')
                authVersion:
                  type: number
                  description: the auth version, which is `2`
                  example: 2
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/response"
                - type: object
                  properties:
                    data: 
                      type: object
                      properties:
                        apiKey:
                          type: string
                          description: the API Key
                          example: (API key)
                        masterKeys:
                          type: string
                          description: the master keys
                          example: (master keys)
                        publicKey:
                          type: string
                          description: the public key
                          example: (public key)
                        privateKey:
                          type: string
                          description: the private key
                          example: (private key)
  /user/masterKeys: #edited
    post:
      tags: [User]
      summary: Retrieve and update user master keys
      description: Returns the user's master keys. If this is the user's first login, there are no master keys yet and the passed `masterKeys` are saved.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                masterKeys:
                  type: string
                  description: the master key that was derived from the raw password (metadata-encrypted)
                  example: (master key derived from raw password)
        required: true
      security: [api_key: []]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/response"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        keys:
                          type: string
                          description: the user's saved master keys, joined with `"|"` (metadata-encrypted)
                          example: (master keys joined with '|', metadata-encrypted)
  /user/keyPair/info:
    get:
      summary: Get encrypted user keypair
      tags: [User]
      description: Retrieve encrypted user keypair
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      publicKey:
                        type: string
                        example: string
                      privateKey:
                        type: string
                        example: string
                xml:
                  name: main
  /user/keyPair/update:
    post:
      summary: Update user keypair
      tags: [User]
      description: Update user keypair
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
                  example: string
                privateKey:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /user/keyPair/set:
    post:
      summary: Set user keypair
      tags: [User]
      description: Set user keypair
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
                  example: string
                privateKey:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /user/publicKey:
    post:
      summary: Get user public key
      tags: [User]
      description: Retrieve a user's public key
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      publicKey:
                        type: string
                        example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /user/baseFolder: #edited
    get:
      tags: [Items]
      summary: Get user base folder
      description: Returns the UUID of the user's root directory.
      security: [api_key: []]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/response"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: the user's root directory's UUID
  /file:
    post:
      summary: Get file info
      tags: ["Items: Files"]
      description: Retrieve file info
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: uuidv4
                      region:
                        type: string
                        example: string
                      bucket:
                        type: string
                        example: string
                      nameEncrypted:
                        type: string
                        example: string
                      nameHashed:
                        type: string
                        example: string
                      sizeEncrypted:
                        type: string
                        example: string
                      mimeEncrypted:
                        type: string
                        example: string
                      metadata:
                        type: string
                        example: string
                      size:
                        type: string
                        example: number
                      parent:
                        type: string
                        example: uuidv4
                      versioned:
                        type: string
                        example: boolean
                      trash:
                        type: string
                        example: boolean
                      version:
                        type: string
                        example: number
                xml:
                  name: main
      x-codegen-request-body-name: body
  /upload/done: #edited
    post:
      summary: Mark an upload completed
      tags: ["Items: Files"]
      description: Marks an upload as completed. Use this after you've uploaded file chunks to the Ingest API. #todo more detailed description
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: the UUID of the uploaded file
                  example: (file uuid)
                name:
                  type: string
                  description: the file name (metadata-encrypted **using the encryption key**)
                  example: (file name, metadata-encrypted using the encryption key)
                nameHashed: 
                  type: string
                  description: the hex-encoded SHA-512 hash of the file name
                  example: (SHA-512 hash of file name, as hex)
                size:
                  type: string
                  description: the file's total size in bytes (metadata-encrypted **using the encryption key**)
                  example: (file size in bytes, metadata-encrypted using the encryption key)
                chunks:
                  type: integer
                  description: the number of chunks uploaded
                  example: (number of chunks uploaded)
                mime:
                  type: string
                  description: the file's MIME type
                  example: (file MIME type)
                rm:
                  type: string
                  description: a cryptographically-secure random string of length 32
                  example: (random string of length 32)
                metadata:
                  type: string
                  description: |-
                    the file's metadata (metadata-encrypted **using the master key**) following the schema (TypeScript type definition):
                    ```ts
                    {
                      name: string, // the file name
                      size: number, // the file size in bytes
                      mime: string, // the file's MIME type
                      key: string, // the key used to encrypt the file chunks
                      lastModified: number, // the file's modification timestamp in seconds
                      creation: number, // the file's creation timestamp in seconds
                    }
                    ```
                  example: (-> see description)
                version:
                  type: string
                  description: the file encryption version, which is `2`
                  example: 2
                uploadKey:
                  type: string
                  description: a cryptographically-secure random string of length 32, which had been passed along with each file chunk
                  example: (upload key from chunk uploads)
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/response"
                - type: object
                  properties:
                    chunks:
                      type: number
                      description: the number of chunks uploaded
                      example: (number of chunks uploaded)
                    size:
                      type: number
                      description: the file's total size in bytes
                      example: (file size in bytes)
  /file/present:
    post:
      summary: Check if file exists
      tags: ["Items: Files"]
      description: Check if a file exists
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      present:
                        type: string
                        example: boolean
                      versioned:
                        type: string
                        example: boolean | undefined
                      trash:
                        type: string
                        example: boolean | undefined
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/exists:
    post:
      summary: Check if file exists by name
      tags: ["Items: Files"]
      description: Check if a file exists inside a parent with a given name
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                parent:
                  type: string
                  example: uuidv4
                nameHashed:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      exists:
                        type: string
                        example: boolean
                      uuid:
                        type: string
                        example: string?
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/move:
    post:
      summary: Move file
      tags: ["Items: Files"]
      description: Move a file
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                to:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/rename:
    post:
      summary: Rename file
      tags: ["Items: Files"]
      description: Rename a file
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                name:
                  type: string
                  example: string
                metadata:
                  type: string
                  example: string
                nameHashed:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/trash:
    post:
      summary: Trash file
      tags: ["Items: Files"]
      description: Move a file to the trash
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/restore:
    post:
      summary: Restore file
      tags: ["Items: Files"]
      description: Restore a file from the trash
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/delete/permanent:
    post:
      summary: Delete file permanently
      tags: ["Items: Files"]
      description: Delete a file permanently
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir: #edited
    post:
      tags: ["Items: Directories"]
      summary: Get directory info
      description: Returns information about a directory.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: the desired directory's UUID
                  example: (directory UUID)
        required: true
      security: [api_key: []]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/response"
                - type: object
                  properties:
                    uuid:
                      type: string
                      description: the directory's UUID
                      example: (directory UUID)
                    nameEncrypted:
                      type: string
                      description: the directory's name (metadata-encrypted)
                      example: (directory name, metadata-encrypted)
                    nameHashed:
                      type: string
                      description: the hex-encoded SHA-512 hash of the directory's name
                      example: (SHA-512 hash of directory name, hex-encoded)
                    parent:
                      type: string
                      description: the parente directory's UUID
                      example: (parent directory UUID)
                    trash:
                      type: boolean
                      description: whether this directory is in trash
                      example: (whether the directory is trashed)
                    favorited:
                      type: boolean
                      description: whether this directory is favorited
                      example: (whether the directory is favorited)
                    color:
                      type: string
                      description: the directory's assigned color (as hex code `#000000` or valid CSS value), or `null` if none is set
                      example: (directory color, or null)
  /dir/content:
    post:
      tags: ["Items: Directories"]
      summary: Get directory content
      description: Returns information about the files and directories inside a directory.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: the directory's uuid, or `"favorites"`, `"recents"`, `"links"`, `"trash"` for special directories
                  example: ('favorites', 'recents', 'links', 'trash', or directory uuid)
                foldersOnly:
                  type: boolean
                  description: whether only directories should be returned (optional; defaults to `false`)
                  example: (whether to only return directories, default = false)
        required: true
      security: [api_key: []]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/response"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uploads:
                          type: array
                          description: the files inside this directory
                          items:
                            type: object
                            properties:
                              uuid: 
                                type: string
                                description: the file's UUID
                                example: (file uuid)
                              metadata:
                                type: string
                                description: |-
                                  the file's metadata (metadata-encrypted) following the schema (TypeScript type definition):
                                  ```ts
                                  {
                                    name: string, // the file name
                                    size: number, // the file size in bytes
                                    mime: string, // the file's MIME type
                                    key: string, // the key used to encrypt the file chunks
                                    lastModified: number, // the file's modification time in milliseconds
                                    creation: number, // the file's creation time in milliseconds
                                  }
                                  ```
                              rm: 
                                type: string
                                description: (#todo)
                              timestamp:
                                type: integer
                                description: (#todo)
                              chunks:
                                type: integer
                                description: the number of chunks this file is split into
                                example: (number of chunks)
                              size: 
                                type: integer
                                description: the file's size in bytes (#todo)
                              bucket:
                                type: string
                                description: the storage bucket this file is stored in (needed for downloading it)
                                example: (storage bucket)
                              region:
                                type: string
                                description: the storage region this file is stored in (needed for downloading it)
                                example: (storage region)
                              parent:
                                type: string
                                description: the parent directory's UUID
                                example: (parent directory UUID)
                              version:
                                type: integer
                                description: the file encryption version, which is `1` or `2`
                                example: (file encryption version)
                              favorited:
                                type: integer
                                description: whether this file is favorited, expressed as `1` or `0`
                                example: (whether this file is favorited, as 1 or 0)
                        folders: #todo
                          type: array
                          description: the directories inside this directory
                          items:
                            type: object
                            properties:
                              uuid:
                                type: string
                              name:
                                type: string
                              parent:
                                type: string
                              color:
                                type: string
                              timestamp:
                                type: integer
                              is_sync:
                                type: integer
                              is_default:
                                type: integer
  /dir/download:
    post:
      summary: Get directory tree
      tags: ["Items: Directories"]
      description: Retrieve complete folder tree (flattened)
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      files:
                        type: string
                        example: array
                      folders:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/tree:
    post:
      summary: Get flattened directory tree
      tags: ["Items: Directories"]
      description: "Get a complete directory tree (meant for syncing, flattened)"
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                deviceId:
                  type: string
                  example: uuidv4
                skipCache:
                  type: string
                  example: 0 | 1
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      folders:
                        type: string
                        example: array
                      files:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/create:
    post:
      summary: Create directory
      tags: ["Items: Directories"]
      description: Create a folder
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                name:
                  type: string
                  example: encrypted string
                nameHashed:
                  type: string
                  example: string
                parent:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: uuidv4
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/present:
    post:
      summary: Check if directory exists
      tags: ["Items: Directories"]
      description: Check if a directory exists
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      present:
                        type: string
                        example: boolean
                      trash:
                        type: string
                        example: boolean | undefined
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/exists:
    post:
      summary: Check if directory exists by name
      tags: ["Items: Directories"]
      description: Check if a directory exists inside a parent with a given name
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                parent:
                  type: string
                  example: uuidv4
                nameHashed:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      exists:
                        type: string
                        example: boolean
                      uuid:
                        type: string
                        example: string?
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/size:
    post:
      summary: Get directory size
      tags: ["Items: Directories"]
      description: Retrieve directory size
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                sharerId:
                  type: string
                  example: number | 0
                receiverId:
                  type: string
                  example: number | 0
                trash:
                  type: string
                  example: 0 | 1
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      size:
                        type: string
                        example: number
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/move:
    post:
      summary: Move directory
      tags: ["Items: Directories"]
      description: Move a directory
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                to:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/rename:
    post:
      summary: Rename directory
      tags: ["Items: Directories"]
      description: Rename a directory
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                name:
                  type: string
                  example: string
                nameHashed:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/trash:
    post:
      summary: Trash directory
      tags: ["Items: Directories"]
      description: Move a directory to the trash
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/restore:
    post:
      summary: Restore directory
      tags: ["Items: Directories"]
      description: Restore a directory from the trash
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/delete/permanent:
    post:
      summary: Delete directory permanently
      tags: ["Items: Directories"]
      description: Delete a directory permanently
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/color:
    post:
      summary: Change directory color
      tags: ["Items: Directories"]
      description: Change folder color
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                color:
                  type: string
                  example: default | blue | green | purple | gray | red
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/shared:
    post:
      summary: Check if directory is shared
      tags: ["Items: Directories"]
      description: Check if a folder is shared
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      sharing:
                        type: string
                        example: boolean
                      users:
                        type: string
                        example: "{ email: string, publicKey: string }[]"
                xml:
                  name: main
      x-codegen-request-body-name: body
  /trash/empty: #edited
    post:
      tags: [Items]
      summary: Empty trash
      description: Permanently deletes all trash items.
      security: [api_key: []]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response"
  /item/favorite:
    post:
      summary: Change item favorited
      tags: [Items]
      description: Change item favorite status
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                type:
                  type: string
                  example: file | folder
                value:
                  type: string
                  example: 0 | 1
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: uuidv4
                      type:
                        type: string
                        example: file | folder
                      value:
                        type: string
                        example: 0 | 1
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/link/info:
    post:
      summary: Get file public link info
      tags: [Public Links]
      description: Get public link info of a file
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                password:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      bucket:
                        type: string
                        example: string
                      uuid:
                        type: string
                        example: string
                      region:
                        type: string
                        example: string
                      name:
                        type: string
                        example: string
                      size:
                        type: string
                        example: string
                      mime:
                        type: string
                        example: string
                      chunks:
                        type: string
                        example: number
                      password:
                        type: string
                        example: string
                      downloadBtn:
                        type: string
                        example: boolean
                      timestamp:
                        type: string
                        example: number
                      version:
                        type: string
                        example: number
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/link/status:
    post:
      summary: Get file public link status
      tags: [Public Links]
      description: Retrieve file public link status
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: uuidv4
                      enabled:
                        type: string
                        example: boolean
                      expiration:
                        type: string
                        example: number
                      expirationText:
                        type: string
                        example: string
                      downloadBtn:
                        type: string
                        example: boolean
                      password:
                        type: string
                        example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/link/edit:
    post:
      summary: Edit file public link
      tags: [Public Links]
      description: Edit a file's public link
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                fileUUID:
                  type: string
                  example: uuidv4
                expiration:
                  type: string
                  example: string
                password:
                  type: string
                  example: string
                passwordHashed:
                  type: string
                  example: string
                downloadBtn:
                  type: string
                  example: boolean
                salt:
                  type: string
                  example: string
                type:
                  type: string
                  example: enable | disable
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /file/link/password:
    post:
      summary: Check if file public link is password-protected
      tags: [Public Links]
      description: Check if a file public link is password protected
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      hasPassword:
                        type: string
                        example: boolean
                      salt:
                        type: string
                        example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/link/info:
    post:
      summary: Get directory public link info
      tags: [Public Links]
      description: Get public link info of a folder
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      parent:
                        type: string
                        example: string
                      metadata:
                        type: string
                        example: string
                      hasPassword:
                        type: string
                        example: boolean
                      salt:
                        type: string
                        example: string
                      timestamp:
                        type: string
                        example: number
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/link/status:
    post:
      summary: Get directory public link status
      tags: [Public Links]
      description: Retrieve status of a folder public link
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      exists:
                        type: string
                        example: boolean
                      uuid:
                        type: string
                        example: uuidv4?
                      key:
                        type: string
                        example: string?
                      expiration:
                        type: string
                        example: number?
                      expirationText:
                        type: string
                        example: string?
                      downloadBtn:
                        type: string
                        example: 0 | 1?
                      password:
                        type: string
                        example: string?
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/link/content:
    post:
      summary: Get directory public link content
      tags: [Public Links]
      description: Get public link info of a folder
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                parent:
                  type: string
                  example: uuidv4
                password:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      folders:
                        type: string
                        example: array
                      files:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/link/edit:
    post:
      summary: Edit directory public link
      tags: [Public Links]
      description: Edit a folder's public link
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                expiration:
                  type: string
                  example: string
                password:
                  type: string
                  example: string
                passwordHashed:
                  type: string
                  example: string
                downloadBtn:
                  type: string
                  example: boolean
                salt:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/link/add:
    post:
      summary: Add item to directory public link
      tags: [Public Links]
      description: Add an item to a folder public link
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                parent:
                  type: string
                  example: uuidv4
                linkUUID:
                  type: string
                  example: uuidv4
                type:
                  type: string
                  example: file | folder
                metadata:
                  type: string
                  example: encrypted string
                key:
                  type: string
                  example: encrypted string
                expiration:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/link/remove:
    post:
      summary: Remove directory public link
      tags: [Public Links]
      description: Remove a public link from a folder
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/size/link:
    post:
      summary: Get directory public link size
      tags: [Public Links]
      description: Retrieve public link directory size
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                linkUUID:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      size:
                        type: string
                        example: number
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/download/link:
    post:
      summary: Get directory tree of public link
      tags: [Public Links]
      description: Retrieve complete folder tree of a public link (flattened)
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                parent:
                  type: string
                  example: uuidv4
                password:
                  type: string
                  example: string | none
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      files:
                        type: string
                        example: array
                      folders:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/linked/rename:
    post:
      summary: Rename public linked directory item
      tags: [Public Links]
      description: Rename a public linked folder item
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                linkUUID:
                  type: string
                  example: uuidv4
                metadata:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/linked:
    post:
      summary: Check if directory is public linked
      tags: [Public Links]
      description: Check if a folder is public linked
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      link:
                        type: string
                        example: boolean
                      links:
                        type: string
                        example: "{ linkUUID: uuidv4, linkKey: string }[]"
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/linked:
    post:
      summary: Check if item is in public link
      tags: [Public Links]
      description: Check if an item is in a public link
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      link:
                        type: string
                        example: boolean
                      links:
                        type: string
                        example: "{ linkUUID: uuidv4, linkKey: string }[]"
                xml:
                  name: main
      x-codegen-request-body-name: body
  /shared/in:
    post:
      summary: Get shared in items
      tags: [Shared]
      description: Get shared in items
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      uploads:
                        type: string
                        example: array
                      folders:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /shared/out:
    post:
      summary: Get shared out items
      tags: [Shared]
      description: Get shared out items
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                receiverId:
                  type: string
                  example: number
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      uploads:
                        type: string
                        example: array
                      folders:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /dir/download/shared:
    post:
      summary: Get directory tree of shared folder
      tags: [Shared]
      description: Retrieve complete folder tree of a shared folder (flattened)
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      files:
                        type: string
                        example: array
                      folders:
                        type: string
                        example: array
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/share:
    post:
      summary: Create share out
      tags: [Shared]
      description: Share an item to a user
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                parent:
                  type: string
                  example: string
                email:
                  type: string
                  example: string
                type:
                  type: string
                  example: file | folder
                metadata:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/shared:
    post:
      summary: Check if item is shared
      tags: [Shared]
      description: Check if an item is shared
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      sharing:
                        type: string
                        example: boolean
                      users:
                        type: string
                        example: "{ email: string, publicKey: string, id: number }[]"
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/shared/rename:
    post:
      summary: Rename shared item
      tags: [Shared]
      description: Rename a shared item
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                receiverId:
                  type: string
                  example: number
                metadata:
                  type: string
                  example: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/shared/in/remove:
    post:
      summary: Remove shared in item
      tags: [Shared]
      description: Remove an item that is shared with your account
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
  /item/shared/out/remove:
    post:
      summary: Remove shared out item
      tags: [Shared]
      description: Remove an item that is shared with another user
      requestBody:
        description: Body JSON
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  example: uuidv4
                receiverId:
                  type: string
                  example: number
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: boolean
                  message:
                    type: string
                    example: string
                  code:
                    type: string
                    example: string
                xml:
                  name: main
      x-codegen-request-body-name: body
