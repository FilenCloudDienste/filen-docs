{
  "openapi": "2.0",
  "info": {
    "version": "3",
    "title": "Filen.io API",
    "description": ""
  },
  "host": "gateway.filen.io",
  "basePath": "/v3",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Please enter a API key to test the requests below..."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "description": "Get API health",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/done": {
      "post": {
        "tags": [
          "upload"
        ],
        "description": "Marks an upload as completed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "string"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "nameHashed": {
                  "type": "string",
                  "example": "string"
                },
                "size": {
                  "type": "string",
                  "example": "string"
                },
                "chunks": {
                  "type": "string",
                  "example": "number"
                },
                "mime": {
                  "type": "string",
                  "example": "string"
                },
                "rm": {
                  "type": "string",
                  "example": "string"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                },
                "version": {
                  "type": "string",
                  "example": "number"
                },
                "uploadKey": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "object | array | undefined"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/affiliate/payout": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Request an affiliate payout",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string",
                  "example": "string"
                },
                "address": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "object | array | undefined"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/sub/create": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Create a subscription checkout URL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string",
                  "example": "paypal | stripe | crypto"
                },
                "planId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/avatar": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Upload an avatar",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "avatar": {
                  "type": "string",
                  "example": "base64 string"
                },
                "hash": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "avatarURL": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/password/forgot": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Send out a password recovery email",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/password/forgot/reset": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Reset password using previously generated token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "authVersion": {
                  "type": "string",
                  "example": "number"
                },
                "salt": {
                  "type": "string",
                  "example": "string"
                },
                "hasRecoveryKeys": {
                  "type": "string",
                  "example": "boolean"
                },
                "newMasterKeys": {
                  "type": "string",
                  "example": "string?"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/sub/cancel": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Cancel a subscription",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/personal/update": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Update personal information",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "lastName": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "companyName": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "vatId": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "street": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "streetNumber": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "city": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "postalCode": {
                  "type": "string",
                  "example": "string | __NONE__"
                },
                "country": {
                  "type": "string",
                  "example": "string | __NONE__"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/baseFolder": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Fetch the user's base folder",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/versioning": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Enable or disable versioning",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "string",
                  "example": "0 | 1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/loginAlerts": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Enable or disable login alerts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "string",
                  "example": "0 | 1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/2fa/enable": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Enable 2FA",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "recoveryKeys": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/2fa/disable": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Disable 2FA",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "newKey": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/gdpr": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Fetch the user's GDPR info",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "string"
                        },
                        "lastActiveUnixTimestamp": {
                          "type": "string",
                          "example": "number"
                        },
                        "lastActiveChatUnixTimestamp": {
                          "type": "string",
                          "example": "number"
                        },
                        "lastIPAddress": {
                          "type": "string",
                          "example": "string"
                        },
                        "nickName": {
                          "type": "string",
                          "example": "string"
                        },
                        "personal": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "companyName": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "vatId": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "street": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "streetNumber": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "city": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "postalCode": {
                              "type": "string",
                              "example": "string | null"
                            },
                            "country": {
                              "type": "string",
                              "example": "string | null"
                            }
                          }
                        }
                      }
                    },
                    "events": {
                      "type": "object",
                      "properties": {
                        "ipAddresses": {
                          "type": "string",
                          "example": "string[]"
                        },
                        "userAgents": {
                          "type": "string",
                          "example": "string[]"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/delete": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Account deletion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "twoFactorKey": {
                  "type": "string",
                  "example": "string | XXXXXX"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/delete/all": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Delete all files and folders",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/didExportMasterKeys": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Mark master keys as exported",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/lock": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Acquire a lock for a given resource. Locks are being held for 60 seconds and need to be refreshed, otherwise they expire. ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "UUIDv4"
                },
                "resource": {
                  "type": "string",
                  "example": "string"
                },
                "type": {
                  "type": "string",
                  "example": "acquire | release | status | refresh"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "acquired": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "released": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "refreshed": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "resource": {
                      "type": "string",
                      "example": "string"
                    },
                    "status": {
                      "type": "string",
                      "example": "locked?"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/delete/versions": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Delete all file versions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/settings": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Fetch the user's settings",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "string"
                    },
                    "twoFactorKey": {
                      "type": "string",
                      "example": "string"
                    },
                    "twoFactorEnabled": {
                      "type": "string",
                      "example": "0 | 1"
                    },
                    "versionedFiles": {
                      "type": "string",
                      "example": "number"
                    },
                    "versionedStorage": {
                      "type": "string",
                      "example": "number"
                    },
                    "unfinishedFiles": {
                      "type": "string",
                      "example": "number"
                    },
                    "unfinishedStorage": {
                      "type": "string",
                      "example": "number"
                    },
                    "storageUsed": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/info": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Fetch the user's info",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "number"
                    },
                    "email": {
                      "type": "string",
                      "example": "string"
                    },
                    "maxStorage": {
                      "type": "string",
                      "example": "number"
                    },
                    "storageUsed": {
                      "type": "string",
                      "example": "number"
                    },
                    "isPremium": {
                      "type": "string",
                      "example": "0 | 1"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "string | url | dataURI | null"
                    },
                    "baseFolderUUID": {
                      "type": "string",
                      "example": "uuidv4"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/settings/email/change": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Change email address",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/settings/password/change": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Change password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "currentPassword": {
                  "type": "string",
                  "example": "string"
                },
                "salt": {
                  "type": "string",
                  "example": "string"
                },
                "masterKeys": {
                  "type": "string",
                  "example": "string"
                },
                "authVersion": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "newAPIKey": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/masterKeys": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Retrieve and update user master keys",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "masterKeys": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/keyPair/info": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Retrieve encrypted user keypair",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "publicKey": {
                      "type": "string",
                      "example": "string"
                    },
                    "privateKey": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/keyPair/update": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Update user keypair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "publicKey": {
                  "type": "string",
                  "example": "string"
                },
                "privateKey": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/keyPair/set": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Set user keypair",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "publicKey": {
                  "type": "string",
                  "example": "string"
                },
                "privateKey": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/events": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Retrieve user events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "example": "number"
                },
                "filter": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/event": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Retrieve event info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "number"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "info": {
                      "type": "string",
                      "example": "object"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/invoice": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Generate invoice from UUID",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "base64"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/publicKey": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Retrieve a user's public key",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "publicKey": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/nickname": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Update nickname",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "nickname": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/appearOffline": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Update appearOffline",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "appearOffline": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/pushToken": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Assign a push token to your account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "example": "ios | android | web"
                },
                "token": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/lastActive/desktop": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Update last active timestamp for desktop platforms",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/account": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Retrieve user account data",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "string"
                    },
                    "uploads": {
                      "type": "string",
                      "example": "number"
                    },
                    "folders": {
                      "type": "string",
                      "example": "number"
                    },
                    "storage": {
                      "type": "string",
                      "example": "number"
                    },
                    "maxStorage": {
                      "type": "string",
                      "example": "number"
                    },
                    "isPremium": {
                      "type": "string",
                      "example": "0 | 1 | boolean"
                    },
                    "plans": {
                      "type": "string",
                      "example": "array"
                    },
                    "invoices": {
                      "type": "string",
                      "example": "array"
                    },
                    "subsInvoices": {
                      "type": "string",
                      "example": "array"
                    },
                    "subs": {
                      "type": "string",
                      "example": "array"
                    },
                    "referCount": {
                      "type": "string",
                      "example": "number"
                    },
                    "referStorage": {
                      "type": "string",
                      "example": "number"
                    },
                    "refLimit": {
                      "type": "string",
                      "example": "number"
                    },
                    "refStorage": {
                      "type": "string",
                      "example": "number"
                    },
                    "refId": {
                      "type": "string",
                      "example": "string"
                    },
                    "affId": {
                      "type": "string",
                      "example": "string"
                    },
                    "affRate": {
                      "type": "string",
                      "example": "number"
                    },
                    "affCount": {
                      "type": "string",
                      "example": "number"
                    },
                    "affEarnings": {
                      "type": "string",
                      "example": "number"
                    },
                    "affBalance": {
                      "type": "string",
                      "example": "number"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "string"
                    },
                    "nickName": {
                      "type": "string",
                      "example": "string"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "string"
                    },
                    "appearOffline": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "didExportMasterKeys": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "personal": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "string"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "string"
                        },
                        "companyName": {
                          "type": "string",
                          "example": "string"
                        },
                        "vatId": {
                          "type": "string",
                          "example": "string"
                        },
                        "street": {
                          "type": "string",
                          "example": "string"
                        },
                        "streetNumber": {
                          "type": "string",
                          "example": "string"
                        },
                        "city": {
                          "type": "string",
                          "example": "string"
                        },
                        "postalCode": {
                          "type": "string",
                          "example": "string"
                        },
                        "country": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/trash/empty": {
      "post": {
        "tags": [
          "trash"
        ],
        "description": "Empty trash",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/auth/info": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Retrieve auth info for a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "object | array | undefined"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "twoFactorCode": {
                  "type": "string",
                  "example": "string | XXXXXX"
                },
                "authVersion": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "object | array | undefined"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Register",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "salt": {
                  "type": "string",
                  "example": "string"
                },
                "authVersion": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/confirmation/send": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Resend a confirmation email",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "object | array | undefined"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve folder info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "string"
                    },
                    "nameEncrypted": {
                      "type": "string",
                      "example": "string"
                    },
                    "nameHashed": {
                      "type": "string",
                      "example": "string"
                    },
                    "parent": {
                      "type": "string",
                      "example": "string"
                    },
                    "trash": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "favorited": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "color": {
                      "type": "string",
                      "example": "string | null"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/content": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve folder content",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "favorites | recents | links | trash | uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "object | array | undefined"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/restore": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Restore a directory from the trash",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/create": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Create a folder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "name": {
                  "type": "string",
                  "example": "encrypted string"
                },
                "nameHashed": {
                  "type": "string",
                  "example": "string"
                },
                "parent": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/link/edit": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Edit a folder's public link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "expiration": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "passwordHashed": {
                  "type": "string",
                  "example": "string"
                },
                "downloadBtn": {
                  "type": "string",
                  "example": "boolean"
                },
                "salt": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/download": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve complete folder tree (flattened)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "string",
                      "example": "array"
                    },
                    "folders": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/link/remove": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Remove a public link from a folder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/download/link": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve complete folder tree of a public link (flattened)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "parent": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "password": {
                  "type": "string",
                  "example": "string | none"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "string",
                      "example": "array"
                    },
                    "folders": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/download/shared": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve complete folder tree of a shared folder (flattened)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "string",
                      "example": "array"
                    },
                    "folders": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/link/status": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve status of a folder public link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "exists": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4?"
                    },
                    "key": {
                      "type": "string",
                      "example": "string?"
                    },
                    "expiration": {
                      "type": "string",
                      "example": "number?"
                    },
                    "expirationText": {
                      "type": "string",
                      "example": "string?"
                    },
                    "downloadBtn": {
                      "type": "string",
                      "example": "0 | 1?"
                    },
                    "password": {
                      "type": "string",
                      "example": "string?"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/link/add": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Add an item to a folder public link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "parent": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "linkUUID": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "type": {
                  "type": "string",
                  "example": "file | folder"
                },
                "metadata": {
                  "type": "string",
                  "example": "encrypted string"
                },
                "key": {
                  "type": "string",
                  "example": "encrypted string"
                },
                "expiration": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/tree": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Get a complete directory tree (meant for syncing, flattened)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "deviceId": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "skipCache": {
                  "type": "string",
                  "example": "0 | 1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "folders": {
                      "type": "string",
                      "example": "array"
                    },
                    "files": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/color": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Change folder color",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "color": {
                  "type": "string",
                  "example": "default | blue | green | purple | gray | red"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/size": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve directory size",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "sharerId": {
                  "type": "string",
                  "example": "number | 0"
                },
                "receiverId": {
                  "type": "string",
                  "example": "number | 0"
                },
                "trash": {
                  "type": "string",
                  "example": "0 | 1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/size/link": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Retrieve public link directory size",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "linkUUID": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Retrieve file info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4"
                    },
                    "region": {
                      "type": "string",
                      "example": "string"
                    },
                    "bucket": {
                      "type": "string",
                      "example": "string"
                    },
                    "nameEncrypted": {
                      "type": "string",
                      "example": "string"
                    },
                    "nameHashed": {
                      "type": "string",
                      "example": "string"
                    },
                    "sizeEncrypted": {
                      "type": "string",
                      "example": "string"
                    },
                    "mimeEncrypted": {
                      "type": "string",
                      "example": "string"
                    },
                    "metadata": {
                      "type": "string",
                      "example": "string"
                    },
                    "size": {
                      "type": "string",
                      "example": "number"
                    },
                    "parent": {
                      "type": "string",
                      "example": "uuidv4"
                    },
                    "versioned": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "trash": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "version": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/link/status": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Retrieve file public link status",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4"
                    },
                    "enabled": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "expiration": {
                      "type": "string",
                      "example": "number"
                    },
                    "expirationText": {
                      "type": "string",
                      "example": "string"
                    },
                    "downloadBtn": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "password": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/version/restore": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Restore a file version",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "current": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "currentUUID": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                },
                "bucket": {
                  "type": "string",
                  "example": "string"
                },
                "region": {
                  "type": "string",
                  "example": "string"
                },
                "chunks": {
                  "type": "string",
                  "example": "number"
                },
                "parent": {
                  "type": "string",
                  "example": "string"
                },
                "rm": {
                  "type": "string",
                  "example": "string"
                },
                "timestamp": {
                  "type": "string",
                  "example": "number"
                },
                "version": {
                  "type": "string",
                  "example": "number"
                },
                "favorited": {
                  "type": "string",
                  "example": "0 | 1"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/link/edit": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Edit a file's public link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "fileUUID": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "expiration": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "passwordHashed": {
                  "type": "string",
                  "example": "string"
                },
                "downloadBtn": {
                  "type": "string",
                  "example": "boolean"
                },
                "salt": {
                  "type": "string",
                  "example": "string"
                },
                "type": {
                  "type": "string",
                  "example": "enable | disable"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/restore": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Restore a file from the trash",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/present": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Check if a file exists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "present": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "versioned": {
                      "type": "string",
                      "example": "boolean | undefined"
                    },
                    "trash": {
                      "type": "string",
                      "example": "boolean | undefined"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/move": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Move a directory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "to": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/present": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Check if a directory exists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "present": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "trash": {
                      "type": "string",
                      "example": "boolean | undefined"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/exists": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Check if a directory exists inside a parent with a given name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "parent": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "nameHashed": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "exists": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "string?"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/rename": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Rename a directory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "nameHashed": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/exists": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Check if a file exists inside a parent with a given name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "parent": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "nameHashed": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "exists": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "string?"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/move": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Move a file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "to": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/rename": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Rename a file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                },
                "nameHashed": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/versions": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Retrieve all versions of a file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "versions": {
                      "type": "string",
                      "example": "{ uuid: uuid, metadata: string, bucket: string, region: string, chunks: number, rm: string, timestamp: number, version: number }[]"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/delete/permanent": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Delete a file permanently",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/trash": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Move a file to the trash",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/trash": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Move a directory to the trash",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/delete/permanent": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Delete a directory permanently",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/versions": {
      "get": {
        "tags": [
          "misc"
        ],
        "description": "Retrieve current client versions",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "mobile": {
                      "type": "string",
                      "example": "string"
                    },
                    "desktop": {
                      "type": "string",
                      "example": "string"
                    },
                    "web": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/shared/in": {
      "post": {
        "tags": [
          "shared"
        ],
        "description": "Get shared in items",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uploads": {
                      "type": "string",
                      "example": "array"
                    },
                    "folders": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/shared/out": {
      "post": {
        "tags": [
          "shared"
        ],
        "description": "Get shared out items",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "receiverId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uploads": {
                      "type": "string",
                      "example": "array"
                    },
                    "folders": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/favorite": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Change item favorite status",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "type": {
                  "type": "string",
                  "example": "file | folder"
                },
                "value": {
                  "type": "string",
                  "example": "0 | 1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4"
                    },
                    "type": {
                      "type": "string",
                      "example": "file | folder"
                    },
                    "value": {
                      "type": "string",
                      "example": "0 | 1"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/share": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Share an item to a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "parent": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "type": {
                  "type": "string",
                  "example": "file | folder"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/shared/rename": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Rename a shared item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "receiverId": {
                  "type": "string",
                  "example": "number"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/linked/rename": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Rename a public linked folder item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "linkUUID": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/link/password": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Check if a file public link is password protected",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "hasPassword": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "salt": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/file/link/info": {
      "post": {
        "tags": [
          "file"
        ],
        "description": "Get public link info of a file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "bucket": {
                      "type": "string",
                      "example": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "string"
                    },
                    "region": {
                      "type": "string",
                      "example": "string"
                    },
                    "name": {
                      "type": "string",
                      "example": "string"
                    },
                    "size": {
                      "type": "string",
                      "example": "string"
                    },
                    "mime": {
                      "type": "string",
                      "example": "string"
                    },
                    "chunks": {
                      "type": "string",
                      "example": "number"
                    },
                    "password": {
                      "type": "string",
                      "example": "string"
                    },
                    "downloadBtn": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "number"
                    },
                    "version": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/link/info": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Get public link info of a folder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "parent": {
                      "type": "string",
                      "example": "string"
                    },
                    "metadata": {
                      "type": "string",
                      "example": "string"
                    },
                    "hasPassword": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "salt": {
                      "type": "string",
                      "example": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/link/content": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Get public link info of a folder",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "parent": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "folders": {
                      "type": "string",
                      "example": "array"
                    },
                    "files": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/shared": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Check if a folder is shared",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "sharing": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "users": {
                      "type": "string",
                      "example": "{ email: string, publicKey: string }[]"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/dir/linked": {
      "post": {
        "tags": [
          "dir"
        ],
        "description": "Check if a folder is public linked",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "links": {
                      "type": "string",
                      "example": "{ linkUUID: uuidv4, linkKey: string }[]"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/linked": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Check if an item is in a public link",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "links": {
                      "type": "string",
                      "example": "{ linkUUID: uuidv4, linkKey: string }[]"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/shared": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Check if an item is shared",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "sharing": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "users": {
                      "type": "string",
                      "example": "{ email: string, publicKey: string, id: number }[]"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/shared/in/remove": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Remove an item that is shared with your account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/item/shared/out/remove": {
      "post": {
        "tags": [
          "item"
        ],
        "description": "Remove an item that is shared with another user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "receiverId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/mobile/offline/files": {
      "post": {
        "tags": [
          "mobile"
        ],
        "description": "Get offline files info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "string",
                  "example": "uuidv4[]"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "requested": {
                      "type": "string",
                      "example": "uuidv4"
                    },
                    "info": {
                      "type": "string",
                      "example": "array"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/send": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Send a chat message",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "conversation": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/mute": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Mute/unmute a chat",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "mute": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/edit": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Edit a chat message",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "conversation": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/message/embed/disable": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Disable message embed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/delete": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Delete a conversation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/leave": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Leave a conversation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/messages": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Fetch chat messages",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "to": {
                  "type": "string",
                  "example": "string"
                },
                "timestamp": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "array"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/delete": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Delete a chat message",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/typing": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Send typing events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "to": {
                  "type": "string",
                  "example": "string"
                },
                "type": {
                  "type": "string",
                  "example": "up | down"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations": {
      "get": {
        "tags": [
          "chat"
        ],
        "description": "Fetch conversations",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "array"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/unread": {
      "get": {
        "tags": [
          "chat"
        ],
        "description": "Fetch count of unread chat messages",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "unread": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/unread": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Fetch count of unread chat messages",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "unread": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/read": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Delete unread chat notifications",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/read": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Delete unread chat notifications",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/online": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Fetch online users in conversation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "conversation": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ userId: number; lastActive: number; appearOffline: boolean }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/create": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Create a conversation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/name/edit": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Edit conversation name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/participants/add": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Add a participant to a chat conversation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "contactUUID": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/conversations/participants/remove": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Remove a participant from a chat conversation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "userId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/chat/lastFocus": {
      "post": {
        "tags": [
          "chat"
        ],
        "description": "Update lastFocus timestamp of conversations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "conversations": {
                  "type": "string",
                  "example": "{ uuid: uuidv4, lastFocus: number }[]"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "chat"
        ],
        "description": "Retrieve lastFocus timestamp of conversations",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ uuid: uuidv4, lastFocus: number }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user/profile": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Retrieve user profile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ id: number, email: string, publicKey: string, avatarURL: string, appearOffline: boolean, lastActive: number, nickName: number }"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": [
          "notes"
        ],
        "description": "Fetch all notes",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "array"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/content": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Fetch note content",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "preview": {
                      "type": "string",
                      "example": "string"
                    },
                    "content": {
                      "type": "string",
                      "example": "string"
                    },
                    "editedTimestamp": {
                      "type": "string",
                      "example": "number"
                    },
                    "editorId": {
                      "type": "string",
                      "example": "number"
                    },
                    "type": {
                      "type": "string",
                      "example": "text | md | rich | code | checklist"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/history": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Fetch note history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ id: number, preview: string, content: string, editedTimestamp: number, editorId: number, type: text | md | rich | code | checklist }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/history/restore": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Restore a note from history",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "id": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/create": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Create a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/delete": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Delete a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/trash": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Trash a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/archive": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Archive a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/restore": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Restore a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/pinned": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Pin or unpin a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "pinned": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/favorite": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Favorite or unfavorite a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "favorite": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/participants/add": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Add a participant to a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "contactUUID": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "metadata": {
                  "type": "string",
                  "example": "string"
                },
                "permissionsWrite": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/participants/remove": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Remove a participant to a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "userId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/participants/permissions": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Change participant permissions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "userId": {
                  "type": "string",
                  "example": "number"
                },
                "permissionsWrite": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/type/change": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Change note type",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "type": {
                  "type": "string",
                  "example": "text | md | code | rich | checklist"
                },
                "preview": {
                  "type": "string",
                  "example": "string"
                },
                "content": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/title/edit": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Edit note title",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "title": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/content/edit": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Edit content of a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "preview": {
                  "type": "string",
                  "example": "string"
                },
                "content": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/tags": {
      "get": {
        "tags": [
          "notes"
        ],
        "description": "Fetch all tags",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ uuid: string, name: string, favorite: boolean, editedTimestamp: number, createdTimestamp: number }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/tags/create": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Create a tag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/tags/rename": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Rename a tag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/tags/delete": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Delete a tag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/tags/favorite": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Favorite a tag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "favorite": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/tag": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Tag a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "tag": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/notes/untag": {
      "post": {
        "tags": [
          "notes"
        ],
        "description": "Untag a note",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                },
                "tag": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "contacts"
        ],
        "description": "Fetch all contacts",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ uuid: string, userId: string, email: string, avatar: string | null, nickName: string, lastActive: number, timestamp: number }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/in": {
      "get": {
        "tags": [
          "contacts"
        ],
        "description": "Fetch all incoming contact requests",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ uuid: string, userId: number, email: string, avatar: string | null, nickName: string, timestamp: number }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/in/count": {
      "get": {
        "tags": [
          "contacts"
        ],
        "description": "Fetch all incoming contact requests",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "number"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/out": {
      "get": {
        "tags": [
          "contacts"
        ],
        "description": "Fetch all outgoing contact requests",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ uuid: string, userId: number, email: string, avatar: string | null, firstName: string | null, lastName: string | null, timestamp: number }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/out/delete": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Delete outgoing contact request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/send": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Send a contact request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/accept": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Accept a contact request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/requests/deny": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Deny a contact request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/delete": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Delete a contact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/blocked": {
      "get": {
        "tags": [
          "contacts"
        ],
        "description": "Fetch all blocked contacts",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "string",
                  "example": "{ uuid: uuidv4, userId: number, email: string, avatar: string | null, nickName: string, timestamp: number }[]"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/blocked/delete": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Delete a contact block",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "uuidv4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/contacts/blocked/add": {
      "post": {
        "tags": [
          "contacts"
        ],
        "description": "Add a contact block",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Body JSON",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "boolean"
                },
                "message": {
                  "type": "string",
                  "example": "string"
                },
                "code": {
                  "type": "string",
                  "example": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "uuidv4"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    }
  }
}